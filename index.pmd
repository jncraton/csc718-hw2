% Homework 2 OpenMPI Programming
% Jonathan Craton
% October 27, 2019

Programming Assignment 1
========================

> (20 points) A prime number is a positive integer evenly divisible by exactly two positive integers: itself and 1. The first five prime numbers are 2, 3, 5, 7, and 11. Sometimes two consecutive odd numbers are both prime. For example, the odd integers following 3, 5, 11 are all prime numbers. Write a sequential program to determine for all integers less than 1,000,000, the number of times that two consecutive odd integers are both prime numbers.

![Running twin primes sequential](media/twin-primes-sequential-run.gif)

Compiling
---------

The source code for this can be found in `src/twin-primes-sequential.c`.

It can be compiled using `make twin-primes-sequential` in the src directory.

Running
-------

This can be run by calling `./twin-primes-sequential` in the src directory.

Running Time
------------

The program ran on average in ~0.65 seconds on one of the Rushmore systems.

Expected Output
---------------

This program should find 78498 primes up to 1,000,000. It should find 16,338 twin primes.

Programming Assignment 2
========================

> (30 points) A prime number is a positive integer evenly divisible by exactly two positive integers: itself and 1. The first five prime numbers are 2, 3, 5, 7, and 11. Sometimes two consecutive odd numbers are both prime. For example, the odd integers following 3, 5, 11 are all prime numbers. Write a parallel program using openMPI to determine for all integers less than 1,000,000, the number of times that two consecutive odd integers are both prime numbers.

![Running twin primes MPI](media/twin-primes-mpi-run.gif)

Compiling
---------

The source code for this can be found in `src/twin-primes-mpi.c`.

It can be compiled using `make twin-primes-mpi` in the src directory.

Running
-------

This can be run by calling `./twin-primes-sequential` in the src directory.

Running Time
------------

The program ran on average in ~0.65 seconds on one of the Rushmore systems.

Expected Output
---------------

This program should find 78498 primes up to 1,000,000. It should find 16,338 twin primes.

Programming Assignment 3
========================

(30 points) The gap between consecutive prime numbers 2 and 3 is only 1, while the gap between consecutive primes 7 and 11 is 4. Write a parallel program using openMPI to determine, for all integers less than 1,000,000, the largest gap between a pair of consecutive prime numbers.

The source code for this can be found in `src/prime-gap.c`.

Programming Assignment 4
========================

> (20 points) The value of the definite integral

$$\int_{0}^{1}\frac{4}{1 + x^{2}}\text{dx}$$

> is π . We can use numerical integration to compute π by approximating the area under the curve. A simple way to do this is called the rectangle rule (Figure 4.7). We divide the interval \[0, 1\] into *k* subintervals of equal size. We find the height of the curve at the midpoint of each of these subintervals. With these heights we can construct k rectangles. The area of the rectangles approximates the area under the curve. As *k* increases, the accuracy of the estimate also increases.

![](./media/image1.png)

> A C program that uses the rectangle rule to approximate π appears in
Figure 4.8. Write a parallel MPI program to computer π using the
rectangle rule with 1,000,000 intervals. (Use the virtual cluster
provided in the class to develop and test the program.)

![Figure 4.8 A C program to compute the value of π using the rectangle
rule.](./media/image2.png)




For each programming assignment, you need to write the code, and run it
on Rushmore to get the running time for the following number of
processors: 1, 2, 3, 4. Put this into a table to see the performance
difference by parallel computing.

Benchmark running on Rushmore with different number of processors.

  Problem      Np=1   Np=2   Np=3   Np=4
  ------------ ------ ------ ------ ------
  Program1.c                        
  Program2.c                        
  Program3.c                        
  Program4.c                        



Due: Oct 27, 2019 by Midnight

Total: 100 points

Note: For all the programming assignments, you can choose any operating
systems you want. I will usually provide C/C++ samples for the
programming assignments. If you prefer to use other languages, e.g.,
Java, they are accepted too. A README.txt is required to submit any
programming assignments. In the README.txt, you need to provide the
following information:

1)  How to compile your program?

2)  How to run your program?

3)  What is the average running time of your program?

4)  What are the expected output results when I run your program?

5)  Any descriptions which may help me to compile, run, and verify your
    answers. (FYI: I check every programming assignment turned in!)

Zip all you source code, project files, supporting files, and README.txt
and submit the all-in-one zip file together to the D2L Dropbox. If you
have any questions about the homework, please let me know.
